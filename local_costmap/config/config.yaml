---
# ---------------- #
# General parameters
  # visualization levels:
  #   0 - no viz, no impact on runtime
  #   1 - runtime viz, small but acceptable impact on runtime
  #   2 - extra viz, may slow down runtime
  #   3 - debug viz, may significantly slow down runtime
# ---------------- #

space_explorer: 
  enabled: false
  overlap_percentage_goal: 0.15
  min_radius: 0.6
  branch_factor: 16
  max_distance: 15
  back_limit: -1.0
  heuristic_bias: 1.3

epsilon: 0.001

viz:
  topics:
    goals:
      next_goal: 
        level: 1
        # given in published messages/second
        rate_limit: 5
        type: "pose"
        color: [0,1,1,1]
      corridors:
        level: 1
        rate_limit: 5
        type: "segment"
        color: [0,1,0,1]
      walls:
        level: 2
        rate_limit: 5
        type: "segment"
        color: [1,0,1,1]
      imagined_wall:
        level: 2
        rate_limit: 5
        type: "segment"
        color: [0,1,1,1]
    obstacles:
      inadmissible:
        level: 3
        rate_limit: 3
        type: "omap"
        color: [0,0,0,1]
    path_search:
      best_path:
        level: 1
        rate_limit: 5
        type: "path"
        color: [0,0,0,1]
      viable_paths:
        level: 2
        rate_limit: 5
        type: "path"
        color: [0,0,0,1]
      complete_paths:
        level: 2
        rate_limit: 5
        type: "path"
        color: [0,0,0,1]
      speed:
        level: 1
        rate_limit: 10
        type: "float"
      steering:
        level: 1
        rate_limit: 10
        type: "float"
      test_goal:
        level: 1
        # given in published messages/second
        rate_limit: 2
        type: "pose"
        color: [0,1,1,1]
    space_explorer:
      explored:
        level: 1
        rate_limit: 5
        type: "circles"
        color: [0,0,0,1]
      path:
        level: 1
        rate_limit: 5
        type: "circles"
        color: [0,0,0,1]


# wheel_base: 0.27
planning_freq: 5
execution_freq: 12

runtime_specific:
  racecar:
    scan_topic: "/scan"
    visualize_level: 1
  not_racecar:
    scan_topic: "/scan_throttle"
    visualize_level: 2

# --------------------------- #
# obstacle avoidance parameters
# --------------------------- #

# obstacle map size and discretization (bins/meter)
obstacle_map:
  discretization: 5
  xmin: -3
  xmax: 10
  ymin: -8
  ymax: 8
  # minimum distance to nearest obstacle to be considered admissible
  min_distance: 0.3
  # number of cells worth of spacing between admissibility check waypoints
  # higher is faster, but might result in jumping over obstacles
  admissible_hop: 2.0

# ----------------------- #
# Navigator Parameters
# (wall/corridor detection)
# ----------------------- #
navigator:
  # When we're in a corridor w/ no turns, how far out to set the goal
  straight_ahead_distance: 10

  # Anything shorter is not a wall
  min_wall_length: 0.3

  # Anything shorter is not a corridor
  min_corridor_width: 0.5

  # This amount of error is acceptable to merge into 1 wall
  same_wall_error_angle: 0.17
  same_wall_error_distance: 0.4

  # Take every x laser points, for speed
  downsample_every: 5

# --------------------- #
# Path Planner Parameters
# --------------------- #

planner:
  # number of angle settings to consider at each speed
  # the real number of candidate paths will be twice this
  # number because it will consider both min/max speed settings
  # this number should be odd
  # the higher it is, the better the found path will be, but the longer it will take
  angular_branch_factor: 5

  # if the path is within this distance, the goal is considered met (meters)
  goal_distance_threshold: 0.25

  # if there is now path, and the car is stopped, it will
  # start to back up in a straight line at this speed
  backup_speed: -1.0

  # number of control states per branch
  control_decisions_per_segment: 5

  # max planning distance. paths are terminated when they are above this (meters)
  max_planning_dist: 5

  # heuristic bias
  # heuristic is biased (multiplied) by this value once computed
  # setting this high makes the search more like dfs, low is
  # more like bfs. 1 is theortically optimal?
  heuristic_bias: 1.5

  # don't perform search with segments less than this size
  min_step: 1.1
  # don't perform search with segments greater than this number of segments
  max_segments: 8

  # used for step size generation
  alpha: 0.5 # multiplied by circle radius
  beta: 0.65 # multiplied by goal distance

  # this provides an override to plan a path to a specified point
  # and execute from start to end
  test:
    enabled: false
    goal: [6,2,1.6]

# ------------------ #
# Emergency Parameters
# ------------------ #

emergency:
  # when the robot has an old path it can execute but is considered stuck, it applies
  # breaks as fast as possible while following the old path. This damp factor is applied to
  # steering to potentially smooth the path as the car stops. Set to 1 to follow original path
  stop_path_steering_damp_factor: 1.0

  # backu

...
