---
greenCam:
  row2y: [323.9,.4321479,2.967,-46.14]
  row2width: [11450.0,.2874673,3.5e-16,-.07852111]
  min_area_thresh: 200.0
  lower_thresh: [60,60,6]
  upper_thresh: [80,255,255]
  debug: True
 
space_explorer: 
  enabled: True
  overlap_percentage_goal: 0.15
  min_radius: 0.6
  # if the first constraint is too severe, use this instead
  hard_min_radius: 0.34
  # multiplicative penalty factor for being lower than the min_radius
  soft_limit_penalty: 1.7
  branch_factor: 15
  max_distance: 12
  back_limit: -1.0
  heuristic_bias: 1.4
  max_circle_size: 2.0
  # the circle cost is a factor trigonometrically linked to
  # deflection angle relative to parent, scaled by this factor
  # too high and it plans bad paths, to low and excess jerk
  deflection_coeff: 0.0
  max_pursuit_radius: 2.0
  min_pursuit_radius: 0.5
  time_limit: 0.15
  sampling_bounds_initial: [-1.1,1.1]


epsilon: 0.001

viz:
  topics:
    goals:
      next_goal: 
        # given in published messages/second
        rate_limit: 5
        color: [0,1,1,1]
      corridors:
        rate_limit: 5
        color: [0,1,0,1]
      walls:
        rate_limit: 5
        color: [1,0,1,1]
      imagined_wall:
        rate_limit: 5
        color: [0,1,1,1]
      green_goal:
        rate_limt: 5
        color: [0,0,1,1]
      corridor_goal:
        rate_limit: 15
    obstacles:
      inadmissible:
        rate_limit: 3
        color: [0,0,0,1]
    path_search:
      lookahead_circle:
        rate_limit: 10
      curve_path:
        rate_limit: 10
      best_path:
        rate_limit: 1
        color: [0,0,0,1]
      viable_paths:
        rate_limit: 1
        color: [0,0,0,1]
      complete_paths:
        rate_limit: 5
        color: [0,0,0,1]
      speed:
        rate_limit: 10
      steering:
        rate_limit: 10
      test_goal:
        # given in published messages/second
        rate_limit: 2
        color: [0,1,1,1]
    space_explorer:
      explored:
        rate_limit: 5
        color: [0,0,0,1]
      path:
        rate_limit: 10
        color: [0,0,0,1]
      center_path:
        rate_limit: 10
        color: [0,0,0,1]


# wheel_base: 0.27
planning_freq: 20
execution_freq: 12


runtime_specific:
  racecar:
    scan_topic: "/scan"
    visualize_level: 1
    racecar_env: True
  not_racecar:
    scan_topic: "/racecar/laser/scan"
    # scan_topic: "/scan_throttle"
    # scan_topic: "/scan"
    visualize_level: 2
    racecar_env: False

# --------------------------- #
# obstacle avoidance parameters
# --------------------------- #

# obstacle map size and discretization (bins/meter)
obstacle_map:
  discretization: 5
  xmin: -3
  xmax: 10
  ymin: -8
  ymax: 8
  # minimum distance to nearest obstacle to be considered admissible
  min_distance: 0.1
  # number of cells worth of spacing between admissibility check waypoints
  # higher is faster, but might result in jumping over obstacles
  admissible_hop: 2.0

  vizualize_distmap: False

# ----------------------- #
# Navigator Parameters
# (wall/corridor detection)
# ----------------------- #
navigator:
  # When we're in a corridor w/ no turns, how far out to set the goal
  straight_ahead_distance: 10

  # Anything shorter is not a wall
  min_wall_length: 0.3

  # Anything shorter is not a corridor
  min_corridor_width: 1.2

  # Break on adjacent laser points at least this far from each other.
  # (The presplit width)
  min_discontinuity_width: 1.

  # This amount of error is acceptable to merge into 1 wall
  same_wall_error_angle: 0.17
  same_wall_error_distance: 1.2

  # Take every x laser points, for speed
  downsample_every: 6

  # Whether to run the merge step. (0 or 1)
  enable_merge: 1
  enable_presplit: 1

# --------------------- #
# Path Planner Parameters
# --------------------- #

planner:
  max_prune_deflection: 0.2
  prune_distance: 0.0
  # number of angle settings to consider at each speed
  # the real number of candidate paths will be twice this
  # number because it will consider both min/max speed settings
  # this number should be odd
  # the higher it is, the better the found path will be, but the longer it will take
  angular_branch_factor: 5

  # if the path is within this distance, the goal is considered met (meters)
  goal_distance_threshold: 0.25

  # if there is now path, and the car is stopped, it will
  # start to back up in a straight line at this speed
  backup_speed: -0.8

  # number of control states per branch
  control_decisions_per_segment: 5

  # max planning distance. paths are terminated when they are above this (meters)
  max_planning_dist: 5

  # heuristic bias
  # heuristic is biased (multiplied) by this value once computed
  # setting this high makes the search more like dfs, low is
  # more like bfs. 1 is theortically optimal?
  heuristic_bias: 1.7

  # don't perform search with segments less than this size
  min_step: 0.9
  # don't perform search with segments greater than this number of segments
  max_segments: 8

  # used for step size generation
  alpha: 0.5 # multiplied by circle radius
  beta: 0.65 # multiplied by goal distance

  # how frequently the framerate optimization should occur, in number
  # of planner cycles
  fps_optimization_iteration_count: 7

  # this provides an override to plan a path to a specified point
  # and execute from start to end
  test:
    enabled: false
    goal: [6,2,1.6]

  # max speed given curvature is scaled by this factor for safety
  speed_safety: 0.8

# ------------------ #
# Emergency Parameters
# ------------------ #

emergency:
  # when the robot has an old path it can execute but is considered stuck, it applies
  # breaks as fast as possible while following the old path. This damp factor is applied to
  # steering to potentially smooth the path as the car stops. Set to 1 to follow original path
  stop_path_steering_damp_factor: 1.0

  # backu

navigator3:
  downsample: 4
  # widths are in percentages compared to size of data
  gaussian_width: 0.15
  median_width: 0.17
  # minimum distance to consider a maxima a corridor
  distance_threshold: 3.7
  # min/max angles to be considered
  goal_angle_bounds: [-1.7, 1.7]
  # turns right if true, left otherwise
  turn_right: True
  # removes this percentages of scans
  trim_percentage: 0.1
  show_local_viz: False
  laser_max: 3
  error_range: 60
  contiguous_min: 30

...
